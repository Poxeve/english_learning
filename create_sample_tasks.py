# –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
from app import create_app, db
from app.models import User, TaskCategory, Task
from werkzeug.security import generate_password_hash
import os
from pathlib import Path
from sqlalchemy.exc import IntegrityError


def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∑–∞–¥–∞–Ω–∏–π –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    app = create_app()
    with app.app_context():
        print("‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
        instance_path = Path(app.instance_path)
        app_db_path = instance_path / 'app.db'
        users_db_path = instance_path / 'users.db'

        print("üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö...")
        for db_file in [app_db_path, users_db_path]:
            if db_file.exists():
                db_file.unlink()
                print(f"   –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {db_file}")

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É instance –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
        instance_path.mkdir(parents=True, exist_ok=True)

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print("üîÑ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        try:
            db.create_all()
            print("   ‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ users.db)
            print("üë• –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            users_data = [
                {'username': 'admin', 'password': 'admin123', 'is_admin': True},
                {'username': 'student', 'password': 'student123', 'is_admin': False}
            ]

            for user_data in users_data:
                try:
                    user = User(
                        username=user_data['username'],
                        password_hash=generate_password_hash(user_data['password']),
                        is_admin=user_data['is_admin']
                    )
                    db.session.add(user)
                    db.session.commit()
                    print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['username']} –¥–æ–±–∞–≤–ª–µ–Ω")
                except IntegrityError:
                    db.session.rollback()
                    print(f"   ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['username']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–≤ app.db)
            print("üìö –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
            categories_data = [
                {'id': 1, 'name': 'Present Simple', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π, —Ñ–∞–∫—Ç–æ–≤ –∏ –æ–±—â–∏—Ö –∏—Å—Ç–∏–Ω'},
                {'id': 2, 'name': 'Present Continuous', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏—Ö –≤ –º–æ–º–µ–Ω—Ç —Ä–µ—á–∏'},
                {'id': 3, 'name': 'Present Perfect', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –≤ –ø—Ä–æ—à–ª–æ–º, –Ω–æ –∏–º–µ—é—Ç —Å–≤—è–∑—å —Å –Ω–∞—Å—Ç–æ—è—â–∏–º'},
                {'id': 4, 'name': 'Present Perfect Continuous', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∞–ª–∏—Å—å –≤ –ø—Ä–æ—à–ª–æ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç—Å—è –¥–æ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞'},
                {'id': 5, 'name': 'Past Simple', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ –ø—Ä–æ—à–ª–æ–º'},
                {'id': 6, 'name': 'Past Continuous', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–≤—à–∏—Ö –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –ø—Ä–æ—à–ª–æ–º'},
                {'id': 7, 'name': 'Past Perfect', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–º'},
                {'id': 8, 'name': 'Past Perfect Continuous', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–∏ –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–º'},
                {'id': 9, 'name': 'Future Simple', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏–∑–æ–π–¥—É—Ç –≤ –±—É–¥—É—â–µ–º'},
                {'id': 10, 'name': 'Future Continuous', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±—É–¥—É—â–µ–º'},
                {'id': 11, 'name': 'Future Perfect', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–µ—Ä—à–∞—Ç—Å—è –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –º–æ–º–µ–Ω—Ç—É –≤ –±—É–¥—É—â–µ–º'},
                {'id': 12, 'name': 'Future Perfect Continuous', 'description': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤ –±—É–¥—É—â–µ–º'}
            ]

            for cat_data in categories_data:
                try:
                    category = TaskCategory(**cat_data)
                    db.session.add(category)
                    db.session.commit()
                    print(f"   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è {cat_data['name']} –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                except IntegrityError:
                    db.session.rollback()
                    print(f"   ‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è {cat_data['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á–∏ (–≤ app.db)
            print("üìù –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á–∏...")
            tasks_data = [
                # Present Simple
                {'category_id': 1, 'task_number': 1, 'content': "Complete the sentence: She ___ (work) in a bank."},
                {'category_id': 1, 'task_number': 2, 'content': "Make the sentence negative: They go to school every day."},
                {'category_id': 1, 'task_number': 3, 'content': "Ask a question: He plays tennis on weekends."},
                
                # Present Continuous
                {'category_id': 2, 'task_number': 1, 'content': "Complete the sentence: Look! It ___ (rain) outside."},
                {'category_id': 2, 'task_number': 2, 'content': "Make the sentence negative: They are watching TV now."},
                {'category_id': 2, 'task_number': 3, 'content': "Ask a question: She is cooking dinner."},
                
                # Present Perfect
                {'category_id': 3, 'task_number': 1, 'content': "Complete the sentence: I ___ (never/be) to Paris."},
                {'category_id': 3, 'task_number': 2, 'content': "Make the sentence negative: They have finished their homework."},
                {'category_id': 3, 'task_number': 3, 'content': "Ask a question: She has visited London twice."},
                
                # Present Perfect Continuous
                {'category_id': 4, 'task_number': 1, 'content': "Complete the sentence: She ___ (study) English for 5 years."},
                {'category_id': 4, 'task_number': 2, 'content': "Make the sentence negative: They have been waiting for an hour."},
                {'category_id': 4, 'task_number': 3, 'content': "Ask a question: He has been working here since 2010."},
                
                # Past Simple
                {'category_id': 5, 'task_number': 1, 'content': "Complete the sentence: Yesterday, I ___ (go) to the cinema."},
                {'category_id': 5, 'task_number': 2, 'content': "Make the sentence negative: They visited their grandparents last week."},
                {'category_id': 5, 'task_number': 3, 'content': "Ask a question: She bought a new car."},
                
                # Past Continuous
                {'category_id': 6, 'task_number': 1, 'content': "Complete the sentence: At 8 PM yesterday, I ___ (watch) TV."},
                {'category_id': 6, 'task_number': 2, 'content': "Make the sentence negative: They were playing football when it started to rain."},
                {'category_id': 6, 'task_number': 3, 'content': "Ask a question: She was cooking dinner when I called."},
                
                # Past Perfect
                {'category_id': 7, 'task_number': 1, 'content': "Complete the sentence: By the time we arrived, the movie ___ (already/start)."},
                {'category_id': 7, 'task_number': 2, 'content': "Make the sentence negative: They had finished their work before lunch."},
                {'category_id': 7, 'task_number': 3, 'content': "Ask a question: She had left before I got there."},
                
                # Past Perfect Continuous
                {'category_id': 8, 'task_number': 1, 'content': "Complete the sentence: She ___ (study) for 3 hours when I called."},
                {'category_id': 8, 'task_number': 2, 'content': "Make the sentence negative: They had been waiting for an hour when the bus arrived."},
                {'category_id': 8, 'task_number': 3, 'content': "Ask a question: He had been working there for 5 years."},
                
                # Future Simple
                {'category_id': 9, 'task_number': 1, 'content': "Complete the sentence: Tomorrow, I ___ (go) to the beach."},
                {'category_id': 9, 'task_number': 2, 'content': "Make the sentence negative: They will visit us next week."},
                {'category_id': 9, 'task_number': 3, 'content': "Ask a question: She will start her new job next month."},
                
                # Future Continuous
                {'category_id': 10, 'task_number': 1, 'content': "Complete the sentence: At 8 PM tomorrow, I ___ (watch) a movie."},
                {'category_id': 10, 'task_number': 2, 'content': "Make the sentence negative: They will be playing tennis at this time tomorrow."},
                {'category_id': 10, 'task_number': 3, 'content': "Ask a question: She will be cooking dinner when we arrive."},
                
                # Future Perfect
                {'category_id': 11, 'task_number': 1, 'content': "Complete the sentence: By next year, I ___ (finish) my studies."},
                {'category_id': 11, 'task_number': 2, 'content': "Make the sentence negative: They will have completed the project by Friday."},
                {'category_id': 11, 'task_number': 3, 'content': "Ask a question: She will have arrived by 6 PM."},
                
                # Future Perfect Continuous
                {'category_id': 12, 'task_number': 1, 'content': "Complete the sentence: By next month, I ___ (work) here for 5 years."},
                {'category_id': 12, 'task_number': 2, 'content': "Make the sentence negative: They will have been waiting for 2 hours when the train arrives."},
                {'category_id': 12, 'task_number': 3, 'content': "Ask a question: She will have been studying English for 10 years by next year."}
            ]

            for task_data in tasks_data:
                task_id = f"{task_data['category_id']:02d}{task_data['task_number']:02d}"
                try:
                    task = Task(**task_data)
                    db.session.add(task)
                    db.session.commit()
                    print(f"   ‚úÖ –ó–∞–¥–∞—á–∞ {task_id} –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                except IntegrityError:
                    db.session.rollback()
                    print(f"   ‚ö†Ô∏è –ó–∞–¥–∞—á–∞ {task_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

            print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
            print("=" * 40)
            print("–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
            print(f"üë®‚Äçüíª –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123")
            print(f"üë©‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç: student / student123")
            print("=" * 40)

        except Exception as e:
            db.session.rollback()
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            raise


if __name__ == '__main__':
    init_db()
